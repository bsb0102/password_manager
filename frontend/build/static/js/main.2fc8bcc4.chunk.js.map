{"version":3,"sources":["components/LandingPage/LandingPage.js","components/Login/Login.js","components/Register/Register.js","App.jsx","index.js"],"names":["LandingPage","navigate","useNavigate","isModalOpen","setIsModalOpen","useState","React","createElement","className","onClick","Date","getFullYear","Login","username","setUsername","password","setPassword","error","setError","isLoading","setIsLoading","onSubmit","async","e","preventDefault","response","axios","post","concat","process","REACT_APP_API","localStorage","setItem","data","token","err","type","placeholder","value","onChange","target","required","disabled","Register","successMessage","setSuccessMessage","console","log","setTimeout","App","Router","Routes","Route","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2fc8bcc4.chunk.js","sourcesContent":["// frontend/src/components/LandingPage.js\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport '../../styles/LandingPage.css'; // Ensure the CSS file path is correct\n\nconst LandingPage = () => {\nconst navigate = useNavigate();\nconst [isModalOpen, setIsModalOpen] = useState(false);\n\nconst openLoginModal = () => {\n    setIsModalOpen(true); // Open the modal\n};\n\nconst closeLoginModal = () => {\n    setIsModalOpen(false); // Close the modal\n};\n\n  return (\n    <div className=\"landing-page\">\n      <nav className=\"landing-nav\">\n        <div className=\"nav-brand\" onClick={() => navigate('/')}>TECH CJ</div>\n        <button onClick={() => navigate('/login')} className=\"nav-login-btn\">Login</button>\n      </nav>\n      <header className=\"landing-header\">\n        <h1>Innovative solutions for modern problems</h1>\n      </header>\n      <main className=\"landing-main\">\n        <section className=\"landing-info\">\n          <h2>About Our Product</h2>\n          <p>Describe your product in more detail, its benefits, and how it solves problems.</p>\n          <button onClick={() => navigate('/features')} className=\"features-btn\">\n            Learn More\n          </button>\n          {/* Add more content as needed */}\n        </section>\n      </main>\n      <footer className=\"landing-footer\">\n        <p>Â© {new Date().getFullYear()} TECH CJ</p>\n      </footer>\n    </div>\n  );\n  \n};\n\nexport default LandingPage;\n","// frontend/src/components/Login.js\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport '../../styles/AuthForm.css';\n\nconst Login = () => {\n  const navigate = useNavigate();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false); // State to handle loading\n\n  const handleLogin = async (e) => {\n    e.preventDefault();\n    setIsLoading(true);\n    setError('');\n\n    try {\n      const response = await axios.post(`${process.env.REACT_APP_API}/login`, {\n        username,\n        password,\n      });\n      setIsLoading(false);\n\n      // Assuming the response contains a token and a success message\n      localStorage.setItem('token', response.data.token);\n      navigate('/dashboard'); // Navigate to the dashboard or another page\n    } catch (err) {\n      setIsLoading(false);\n      setError('Invalid username or password');\n    }\n  };\n\n  return (\n    <div className=\"auth-form-container\">\n      <form onSubmit={handleLogin} className=\"auth-form\">\n        <h2>Login</h2>\n        {error && <div className=\"error-message\">{error}</div>}\n        <input\n          type=\"text\"\n          placeholder=\"Username\"\n          value={username}\n          onChange={(e) => setUsername(e.target.value)}\n          required\n          disabled={isLoading}\n        />\n        <input\n          type=\"password\"\n          placeholder=\"Password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          required\n          disabled={isLoading}\n        />\n        <button type=\"submit\" disabled={isLoading}>\n          {isLoading ? 'Logging in...' : 'Login'}\n        </button>\n        {/* Add a link to the registration page */}\n        <p className=\"alt-action\">\n          Don't have an account? <span onClick={() => navigate('/register')}>Register here</span>\n        </p>\n      </form>\n    </div>\n  );\n};\n\nexport default Login;\n","// frontend/src/components/Register.js\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport '../../styles/AuthForm.css'; // Unified CSS for both login and register\n\nconst Register = () => {\n    const navigate = useNavigate();\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [error, setError] = useState('');\n    const [successMessage, setSuccessMessage] = useState(''); // State to handle success message\n  \n    const handleRegister = async (e) => {\n      e.preventDefault();\n      setError(''); // Clear any previous errors\n      try {\n        const response = await axios.post(`${process.env.REACT_APP_API}/register`, {\n          username,\n          password,\n        });\n        // Set success message and handle post-registration logic\n        console.log(response.data)\n        setSuccessMessage('Registration successful! You can now login.');\n        setTimeout(() => navigate('/login'), 3000); // Redirect to login after 3 seconds\n      } catch (error) {\n        // Handle registration failure\n        setError('Registration failed. Please try again.');\n      }\n    };\n  \n    return (\n      <div className=\"auth-form-container\">\n        <form onSubmit={handleRegister} className=\"auth-form\">\n          <h2>Register</h2>\n          {error && <div className=\"error-message\">{error}</div>}\n          {successMessage && <div className=\"success-message\">{successMessage}</div>}\n        <input\n          type=\"text\"\n          placeholder=\"Username\"\n          value={username}\n          onChange={(e) => setUsername(e.target.value)}\n          required\n        />\n        <input\n          type=\"password\"\n          placeholder=\"Password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          required\n        />\n        <button type=\"submit\">Register</button>\n        <p className=\"alt-action\">\n          Already have an account? <span onClick={() => navigate('/login')}>Login here</span>\n        </p>\n      </form>\n    </div>\n  );\n};\n\nexport default Register;\n","import React from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport LandingPage from './components/LandingPage/LandingPage.js';\nimport Login from './components/Login/Login';\nimport Register from './components/Register/Register';\n\n\nconst App = () => {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Routes>\n          <Route path=\"/\" element={<LandingPage />} />\n          <Route path=\"/login\" element={<Login />} />\n          <Route path=\"/register\" element={<Register />} />\n          {/* Define other routes here */}\n        </Routes>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.jsx'; // Adjust this path as necessary\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}